using Pkg
using Test

Pkg.activate("..")

using Colonies

function test_prvkey()
  prvkey = Colonies.Crypto.prvkey()
  return length(prvkey)
end

function test_id()
  id = Colonies.Crypto.id("6d2fb6f546bacfd98c68769e61e0b44a697a30596c018a50e28200aa59b01c0a")
  return id == "4fef2b5a82d134d058c1883c72d6d9caf77cd59ca82d73105017590dea3dcb87"
end

function test_jacobian_add()
	p1 = BigInt(9145974245324100229099870468775465651310464820817378424695723232290407343942)
	p2 = BigInt(5726454693002325744504615879224937090641195997533856518133185097441749801032)
	p3 = BigInt(115714549703150523321131187169862203539915631312738481595605540015431713717331)
	p = (p1, p2, p3)

	q1 = BigInt(3378859141843082240981311929530924778908494294056496383285600481501351521548)
	q2 = BigInt(27521306930728475164406447156615413460758360212583572363332152141481614403438)
	q3 = BigInt(49323301439068515073562494645799725679211443313890051705798536862743810731758)
    q = (q1, q2, q3)

  	res = Colonies.Crypto.jacobian_add(p, q)
	if res == (BigInt(3839523019051154503084769099381507415584753837414379863264960425500703565923),
	      	   BigInt(20189644703747003499840421980750524561734367487063517298774288662171391490014), 
			   BigInt(60937054099961058364101483468792603644143119999146283853926532658309628838553))
		return true
	end

	return false 
end

function test_jacobian_double()
	p1 = BigInt(9145974245324100229099870468775465651310464820817378424695723232290407343942)
	p2 = BigInt(5726454693002325744504615879224937090641195997533856518133185097441749801032)
	p3 = BigInt(115714549703150523321131187169862203539915631312738481595605540015431713717331)
	p = (p1, p2, p3)
  	
	res = Colonies.Crypto.jacobian_double(p)
	if res == (BigInt(47799865997534219673197337605336645889814818209350362461488238402445197905424),
		       BigInt(60263407694755846743636806277114588321762727181244820843669538143699156517749), 
			   BigInt(98392693047863901823354926635876248059211737341107593029860323683906341241571))
		return true
	end

	return false 
end

function test_fast_multiply()
	p1 = BigInt(9145974245324100229099870468775465651310464820817378424695723232290407343942)
	p2 = BigInt(5726454693002325744504615879224937090641195997533856518133185097441749801032)
	p = (p1, p2)
	n = BigInt(49323301439068515073562494645799725679211443313890051705798536862743810731758)

  	res = Colonies.Crypto.fast_multiply(p, n)

	if res == (BigInt(55168891259068323847970500732782990269643885682720201005538882429359294222592),
		       BigInt(24653118739118393505255051840680624663656725984701285210882487021736401159116))
		return true
	end

	return false 
end

function test_sign() 
  prvkey = "d6eb959e9aec2e6fdc44b5862b269e987b8a4d6f2baca542d8acaa97ee5e74f6"
  msg = "hello"
  sig = Colonies.Crypto.sign(msg, prvkey)
  return sig == "e713a1bb015fecabb5a084b0fe6d6e7271fca6f79525a634183cfdb175fe69241f4da161779d8e6b761200e1cf93766010a19072fa778f9643363e2cfadd640900"
end

function test_hash() 
  msg = "test_msg"
  hash = Colonies.Crypto.hash(msg)
  return length(hash)
end

@testset begin 
@test test_prvkey() == 64
@test test_jacobian_add()
@test test_jacobian_double()
@test test_fast_multiply()
@test test_id()
@test test_sign()

end
